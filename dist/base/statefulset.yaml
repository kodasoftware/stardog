apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stardog
  labels:
    app: stardog
spec:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: stardog
  serviceName: stardog
  template:
    metadata:
      name: stardog
      labels:
        app: stardog
    spec:
      initContainers:
        - name: wait-for-zk
          image: busybox
          command:
          - /bin/sh
          - -c
          - |
            while :
            do
              echo "Checking for ZK followers"
              ZK_MNTR=$(echo mntr | nc ${ZK_CS_PORT_2181_TCP_ADDR} ${ZK_CS_PORT_2181_TCP_PORT})
              ZK_FOLLOWERS=$(echo "${ZK_MNTR}" | grep zk_synced_followers | awk '{print $2}')
              echo "Currently ${ZK_FOLLOWERS} ZK followers"
              if [[ "${ZK_FOLLOWERS}" -gt "1" ]]; then
                echo "ZK has two sync'd followers (with the leader that makes 3)"
                exit 0
              fi
              sleep 1
            done
      containers:
        - name: stardog
          image: stardog/stardog
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: '/admin/alive'
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: '/admin/healthcheck'
              port: http
            initialDelaySeconds: 90
            periodSeconds: 5
            failureThreshold: 3
          command:
            - /bin/sh
            - -c
            - |
              set -ex
              cp /mnt/stardog/properties/* /mnt/stardog/license/* ${STARDOG_HOME}/
              printf '\n%s' "pack.zookeeper.address=zk-0:2181,zk-1:2181,zk-2:2181" >> ${STARDOG_HOME}/stardog.properties
              printf '\n%s' "pack.node.address=$(hostname -a):5820"
              /opt/stardog/bin/stardog-admin server start --foreground --port ${PORT} --home ${STARDOG_HOME} --verbose
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - /opt/stardog/bin/stardog-admin server stop --home $STARDOG_HOME
          ports:
            - name: http
              containerPort: 5820
          volumeMounts:
            - name: stardog-properties
              mountPath: /mnt/stardog/properties
            - name: stardog-license
              mountPath: /mnt/stardog/license
          env:
            - name: STARDOG_HOME
              value: /var/opt/stardog
            - name: PORT
              value: "5820"
            - name: STARDOG_LICENSE_PATH
              value: "/var/opt/stardog/stardog-license-key.bin"
            - name: STARDOG_PROPERTIES
              value: "/var/opt/stardog/stardog.properties"
            - name: STARDOG_SERVER_JAVA_ARGS
              value: "-Djava.io.tmpdir=/tmp -Xmx2g -Xms2g -XX:MaxDirectMemorySize=1g"
      restartPolicy: Always
      volumes:
        - name: stardog-properties
          configMap:
            name: stardog-properties
            optional: true
            defaultMode: 0777
        - name: stardog-license
          secret:
            secretName: stardog-license
            optional: true
            defaultMode: 0777