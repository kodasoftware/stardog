apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stardog
  labels:
    app: stardog
spec:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: stardog
  serviceName: stardog
  template:
    metadata:
      name: stardog
      labels:
        app: stardog
    spec:
      # initContainers:
      #   - name: wait-for-zk
      #     image: busybox
      #     command:
      #     - /bin/sh
      #     - -c
      #     - |
      #       while :
      #       do
      #         echo "Checking for ZK followers"
      #         ZK_MNTR=$(echo mntr | nc zk-cs.dev.svc.cluster.local 2181)
      #         ZK_FOLLOWERS=$(echo "${ZK_MNTR}" | grep zk_synced_followers | awk '{print $2}')
      #         echo "Currently ${ZK_FOLLOWERS} ZK followers"
      #         if [[ "${ZK_FOLLOWERS}" -gt "1" ]]; then
      #           echo "ZK has two sync'd followers (with the leader that makes 3)"
      #           exit 0
      #         fi
      #         sleep 1
      #       done
      containers:
        - name: stardog
          image: gcr.io/sauce-gcr--hawk/stardog
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: '/admin/healthcheck'
              httpHeaders:
                - name: Authorization
                  value: Basic YWRtaW46YWRtaW4= # Very crufty
              port: 5820
            initialDelaySeconds: 40
          readinessProbe:
            httpGet:
              path: '/admin/healthcheck'
              httpHeaders:
                - name: Authorization
                  value: Basic YWRtaW46YWRtaW4= # Very crufty
              port: 5820
            initialDelaySeconds: 40
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - /opt/stardog/bin/stardog-admin server stop --home $STARDOG_HOME
          ports:
            - name: http
              containerPort: 5820
          volumeMounts:
            - name: stardog-properties
              mountPath: /mnt/stardog
          env:
            - name: STARDOG_HOME
              value: /var/opt/stardog
      restartPolicy: Always
      volumes:
        - name: stardog-properties
          configMap:
            name: stardog-properties
            optional: true
            defaultMode: 0777